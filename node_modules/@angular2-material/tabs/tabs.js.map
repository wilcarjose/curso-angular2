{"version":3,"file":"tabs.js","sourceRoot":"","sources":["../../src/demo-app/components/tabs/tabs.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, ViewChildren, NgZone} from '@angular/core';\nimport {QueryList} from '@angular/core';\nimport {ContentChildren} from '@angular/core';\nimport {PortalHostDirective} from '@angular2-material/core/portal/portal-directives';\nimport {MdTabLabel} from './tab-label';\nimport {MdTabContent} from './tab-content';\nimport {MdTabLabelWrapper} from './tab-label-wrapper';\nimport {MdInkBar} from './ink-bar';\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'md-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  directives: [PortalHostDirective, MdTabLabelWrapper, MdInkBar],\n})\nexport class MdTabGroup {\n  /** @internal */\n  @ContentChildren(MdTabLabel) labels: QueryList<MdTabLabel>;\n\n  /** @internal */\n  @ContentChildren(MdTabContent) contents: QueryList<MdTabContent>;\n\n  @ViewChildren(MdTabLabelWrapper) private _labelWrappers: QueryList<MdTabLabelWrapper>;\n  @ViewChildren(MdInkBar) private _inkBar: QueryList<MdInkBar>;\n\n  @Input() selectedIndex: number = 0;\n\n  private _focusIndex: number = 0;\n  private _groupId: number;\n\n  constructor(private _zone: NgZone) {\n    this._groupId = nextId++;\n  }\n\n  /**\n   * Waits one frame for the view to update, then upates the ink bar\n   * Note: This must be run outside of the zone or it will create an infinite change detection loop\n   * TODO: internal\n   */\n  ngAfterViewChecked(): void {\n    this._zone.runOutsideAngular(() => {\n      window.requestAnimationFrame(() => {\n        this._updateInkBar();\n      });\n    });\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  private _updateInkBar(): void {\n    this._inkBar.toArray()[0].alignToElement(this._currentLabelWrapper);\n  }\n\n  /**\n   * Reference to the current label wrapper; defaults to null for initial render before the\n   * ViewChildren references are ready.\n   */\n  private get _currentLabelWrapper(): HTMLElement {\n    return this._labelWrappers\n        ? this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement\n        : null;\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._focusIndex;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    this._focusIndex = value;\n    if (this._labelWrappers && this._labelWrappers.length) {\n      this._labelWrappers.toArray()[value].focus();\n    }\n  }\n\n  /**\n   * Returns a unique id for each tab label element\n   * @internal\n   */\n  getTabLabelId(i: number): string {\n    return `md-tab-label-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Returns a unique id for each tab content element\n   * @internal\n   */\n  getTabContentId(i: number): string {\n    return `md-tab-content-${this._groupId}-${i}`;\n  }\n\n  /** Increment the focus index by 1; prevent going over the number of tabs */\n  focusNextTab(): void {\n    if (this._labelWrappers && this.focusIndex < this._labelWrappers.length - 1) {\n      this.focusIndex++;\n    }\n  }\n\n  /** Decrement the focus index by 1; prevent going below 0 */\n  focusPreviousTab(): void {\n    if (this.focusIndex > 0) {\n      this.focusIndex--;\n    }\n  }\n}\n\nexport const MD_TABS_DIRECTIVES = [MdTabGroup, MdTabLabel, MdTabContent];\n"]}