{"version":3,"file":"tab-group.spec.js","sourceRoot":"","sources":["../../src/demo-app/components/tabs/tab-group.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    it,\n    expect,\n    beforeEach,\n    inject,\n    describe,\n    async\n} from '@angular/core/testing';\nimport {TestComponentBuilder, ComponentFixture} from '@angular/compiler/testing';\nimport {MD_TABS_DIRECTIVES, MdTabGroup} from './tabs';\nimport {Component} from '@angular/core';\nimport {By} from '@angular/platform-browser';\n\ndescribe('MdTabGroup', () => {\n  let builder: TestComponentBuilder;\n  let fixture: ComponentFixture<SimpleTabsTestApp>;\n\n  beforeEach(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n    builder = tcb;\n  }));\n\n  describe('basic behavior', () => {\n    beforeEach(async(() => {\n      builder.createAsync(SimpleTabsTestApp).then(f => {\n        fixture = f;\n      });\n    }));\n\n    it('should default to the first tab', () => {\n      checkSelectedIndex(1);\n    });\n\n    it('should change selected index on click', () => {\n      let component = fixture.debugElement.componentInstance;\n      component.selectedIndex = 0;\n      checkSelectedIndex(0);\n\n      // select the second tab\n      let tabLabel = fixture.debugElement.query(By.css('.md-tab-label:nth-of-type(2)'));\n      tabLabel.nativeElement.click();\n      checkSelectedIndex(1);\n\n      // select the third tab\n      tabLabel = fixture.debugElement.query(By.css('.md-tab-label:nth-of-type(3)'));\n      tabLabel.nativeElement.click();\n      checkSelectedIndex(2);\n    });\n\n    it('should cycle through tab focus with focusNextTab/focusPreviousTab functions', () => {\n      let tabComponent = fixture.debugElement.query(By.css('md-tab-group')).componentInstance;\n      tabComponent.focusIndex = 0;\n      fixture.detectChanges();\n      expect(tabComponent.focusIndex).toBe(0);\n\n      tabComponent.focusNextTab();\n      fixture.detectChanges();\n      expect(tabComponent.focusIndex).toBe(1);\n\n      tabComponent.focusNextTab();\n      fixture.detectChanges();\n      expect(tabComponent.focusIndex).toBe(2);\n\n      tabComponent.focusNextTab();\n      fixture.detectChanges();\n      expect(tabComponent.focusIndex).toBe(2); // should stop at 2\n\n      tabComponent.focusPreviousTab();\n      fixture.detectChanges();\n      expect(tabComponent.focusIndex).toBe(1);\n\n      tabComponent.focusPreviousTab();\n      fixture.detectChanges();\n      expect(tabComponent.focusIndex).toBe(0);\n\n      tabComponent.focusPreviousTab();\n      fixture.detectChanges();\n      expect(tabComponent.focusIndex).toBe(0); // should stop at 0\n    });\n\n    it('should change tabs based on selectedIndex', () => {\n      let component = fixture.debugElement.componentInstance;\n      checkSelectedIndex(1);\n\n      component.selectedIndex = 2;\n      checkSelectedIndex(2);\n    });\n  });\n\n  /**\n   * Checks that the `selectedIndex` has been updated; checks that the label and body have the\n   * `md-active` class\n   */\n  function checkSelectedIndex(index: number) {\n    fixture.detectChanges();\n\n    let tabComponent: MdTabGroup = fixture.debugElement\n        .query(By.css('md-tab-group')).componentInstance;\n    expect(tabComponent.selectedIndex).toBe(index);\n\n    let tabLabelElement = fixture.debugElement\n        .query(By.css(`.md-tab-label:nth-of-type(${index + 1})`)).nativeElement;\n    expect(tabLabelElement.classList.contains('md-active')).toBe(true);\n\n    let tabContentElement = fixture.debugElement\n        .query(By.css(`#${tabLabelElement.id}`)).nativeElement;\n    expect(tabContentElement.classList.contains('md-active')).toBe(true);\n  }\n});\n\n@Component({\n  selector: 'test-app',\n  template: `\n    <md-tab-group class=\"tab-group\" [selectedIndex]=\"selectedIndex\">\n      <md-tab>\n        <template md-tab-label>Tab One</template>\n        <template md-tab-content>Tab one content</template>\n      </md-tab>\n      <md-tab>\n        <template md-tab-label>Tab Two</template>\n        <template md-tab-content>Tab two content</template>\n      </md-tab>\n      <md-tab>\n        <template md-tab-label>Tab Three</template>\n        <template md-tab-content>Tab three content</template>\n      </md-tab>\n    </md-tab-group>\n  `,\n  directives: [MD_TABS_DIRECTIVES]\n})\nclass SimpleTabsTestApp {\n  selectedIndex: number = 1;\n}\n"]}